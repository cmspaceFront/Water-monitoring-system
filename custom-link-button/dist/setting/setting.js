System.register(["jimu-core","jimu-ui","jimu-ui/basic/color-picker","jimu-ui/advanced/setting-components","jimu-ui/advanced/resource-selector"],(function(e,t){var a={},r={},l={},c={},n={};return{setters:[function(e){a.React=e.React},function(e){r.NumericInput=e.NumericInput,r.Option=e.Option,r.Select=e.Select,r.TextInput=e.TextInput},function(e){l.ColorPicker=e.ColorPicker},function(e){c.LinkSelector=e.LinkSelector},function(e){n.ImageSelector=e.ImageSelector}],execute:function(){e((()=>{var e={8891:e=>{"use strict";e.exports=a},726:e=>{"use strict";e.exports=r},663:e=>{"use strict";e.exports=n},7756:e=>{"use strict";e.exports=c},1362:e=>{"use strict";e.exports=l}},t={};function o(a){var r=t[a];if(void 0!==r)return r.exports;var l=t[a]={exports:{}};return e[a](l,l.exports,o),l.exports}o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.p="";var i={};return o.p=window.jimuConfig.baseUrl,(()=>{"use strict";o.r(i),o.d(i,{__set_webpack_public_path__:()=>n,default:()=>c});var e=o(8891),t=o(726),a=o(1362),r=o(7756),l=o(663);function c(c){var n,o,i,m,s,d;const{config:v={},id:g,onSettingChange:u}=c,R=(e,t)=>{"function"==typeof(null==v?void 0:v.set)?u({id:g,config:v.set(e,t)}):u({id:g,config:Object.assign(Object.assign({},v),{[e]:t})})},E={flexDirection:"column",alignItems:"stretch",marginBottom:8},y={fontWeight:500,fontSize:13,marginBottom:2},h={fontWeight:600,fontSize:15,margin:"12px 0 6px 0",letterSpacing:.2},p={maxWidth:80,maxHeight:48,borderRadius:4,marginTop:4};return e.React.createElement("div",{className:"widget-setting",style:{padding:12,minWidth:240,maxWidth:320}},e.React.createElement("div",{style:h},"Контент"),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Текст кнопки"),e.React.createElement(t.TextInput,{value:v.buttonText||"",onChange:e=>R("buttonText",e.target.value),size:"sm"})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Ссылка"),e.React.createElement(r.LinkSelector,{linkParam:v.linkConfig,onSettingConfirm:e=>R("linkConfig",e),buttonLabel:"Выбрать ссылку"})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Удалить selected_dam после навигации"),e.React.createElement("label",{style:{fontSize:12,color:"#666",display:"flex",alignItems:"center",gap:4}},e.React.createElement("input",{type:"checkbox",checked:v.removeSelectedDamAfterNavigation||!1,onChange:e=>R("removeSelectedDamAfterNavigation",e.target.checked),style:{margin:0}}),"Удалить selected_dam из localStorage после перехода")),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Фото (светлая тема)"),e.React.createElement(l.ImageSelector,{widgetId:g,onChange:e=>R("image",e),buttonLabel:(null===(n=v.image)||void 0===n?void 0:n.fileName)||"Загрузить/выбрать фото"}),(null===(o=v.image)||void 0===o?void 0:o.url)&&e.React.createElement("img",{src:v.image.url,alt:"",style:p})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Фото (тёмная тема)"),e.React.createElement(l.ImageSelector,{widgetId:g,onChange:e=>R("imageDark",e),buttonLabel:(null===(i=v.imageDark)||void 0===i?void 0:i.fileName)||"Загрузить/выбрать фото (тёмная тема)"}),(null===(m=v.imageDark)||void 0===m?void 0:m.url)&&e.React.createElement("img",{src:v.imageDark.url,alt:"",style:p})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Режим фото"),e.React.createElement(t.Select,{value:v.imageMode||"fit",onChange:e=>R("imageMode",e.target.value),size:"sm"},e.React.createElement(t.Option,{value:"fill"},"Fill"),e.React.createElement(t.Option,{value:"fit"},"Fit"),e.React.createElement(t.Option,{value:"stretch"},"Stretch"))),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Размер фото"),e.React.createElement("div",{style:{display:"flex",gap:8,alignItems:"center"}},e.React.createElement("div",{style:{flex:1}},e.React.createElement("div",{style:{fontSize:11,color:"#666",marginBottom:2}},"Ширина (px)"),e.React.createElement(t.NumericInput,{value:(null===(s=v.imageSize)||void 0===s?void 0:s.width)||100,onChange:e=>R("imageSize",Object.assign(Object.assign({},v.imageSize),{width:e})),min:10,max:500,size:"sm"})),e.React.createElement("div",{style:{flex:1}},e.React.createElement("div",{style:{fontSize:11,color:"#666",marginBottom:2}},"Высота (px)"),e.React.createElement(t.NumericInput,{value:(null===(d=v.imageSize)||void 0===d?void 0:d.height)||60,onChange:e=>R("imageSize",Object.assign(Object.assign({},v.imageSize),{height:e})),min:10,max:500,size:"sm"}))),e.React.createElement("div",{style:{marginTop:8}},e.React.createElement("label",{style:{fontSize:12,color:"#666",display:"flex",alignItems:"center",gap:4}},e.React.createElement("input",{type:"checkbox",checked:v.maintainAspectRatio||!1,onChange:e=>R("maintainAspectRatio",e.target.checked),style:{margin:0}}),"Сохранять пропорции"))),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Позиция фото"),e.React.createElement(t.Select,{value:v.imagePosition||"center",onChange:e=>R("imagePosition",e.target.value),size:"sm"},e.React.createElement(t.Option,{value:"center"},"По центру"),e.React.createElement(t.Option,{value:"left"},"Слева"),e.React.createElement(t.Option,{value:"right"},"Справа"),e.React.createElement(t.Option,{value:"top"},"Сверху"),e.React.createElement(t.Option,{value:"bottom"},"Снизу"))),e.React.createElement("div",{style:h},"Стили"),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет фона (Light)"),e.React.createElement(a.ColorPicker,{color:v.bgColor,onChange:e=>R("bgColor",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет текста (Light)"),e.React.createElement(a.ColorPicker,{color:v.textColor,onChange:e=>R("textColor",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет бордера (Light)"),e.React.createElement(a.ColorPicker,{color:v.borderColor,onChange:e=>R("borderColor",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет фона (hover, Light)"),e.React.createElement(a.ColorPicker,{color:v.hoverBgColor,onChange:e=>R("hoverBgColor",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет текста (hover, Light)"),e.React.createElement(a.ColorPicker,{color:v.hoverTextColor,onChange:e=>R("hoverTextColor",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет бордера (hover, Light)"),e.React.createElement(a.ColorPicker,{color:v.hoverBorderColor,onChange:e=>R("hoverBorderColor",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет фона (Dark)"),e.React.createElement(a.ColorPicker,{color:v.bgColorDark,onChange:e=>R("bgColorDark",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет текста (Dark)"),e.React.createElement(a.ColorPicker,{color:v.textColorDark,onChange:e=>R("textColorDark",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет бордера (Dark)"),e.React.createElement(a.ColorPicker,{color:v.borderColorDark,onChange:e=>R("borderColorDark",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет фона (hover, Dark)"),e.React.createElement(a.ColorPicker,{color:v.hoverBgColorDark,onChange:e=>R("hoverBgColorDark",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет текста (hover, Dark)"),e.React.createElement(a.ColorPicker,{color:v.hoverTextColorDark,onChange:e=>R("hoverTextColorDark",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Цвет бордера (hover, Dark)"),e.React.createElement(a.ColorPicker,{color:v.hoverBorderColorDark,onChange:e=>R("hoverBorderColorDark",e)})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Радиус скругления"),e.React.createElement(t.NumericInput,{value:v.borderRadius||8,onChange:e=>R("borderRadius",e),min:0,max:32,size:"sm"})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Толщина бордера"),e.React.createElement(t.TextInput,{value:v.borderWidth||"1px",onChange:e=>R("borderWidth",e.target.value),size:"sm"})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Стиль бордера"),e.React.createElement(t.Select,{value:v.borderStyle||"solid",onChange:e=>R("borderStyle",e.target.value),size:"sm"},e.React.createElement(t.Option,{value:"solid"},"solid"),e.React.createElement(t.Option,{value:"dashed"},"dashed"),e.React.createElement(t.Option,{value:"dotted"},"dotted"),e.React.createElement(t.Option,{value:"none"},"none"))),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Padding"),e.React.createElement(t.TextInput,{value:v.padding||"10px 20px",onChange:e=>R("padding",e.target.value),size:"sm"})),e.React.createElement("div",{style:E},e.React.createElement("div",{style:y},"Размер шрифта"),e.React.createElement(t.NumericInput,{value:v.fontSize||16,onChange:e=>R("fontSize",e),min:8,max:48,size:"sm"})))}function n(e){o.p=e}})(),i})())}}}));