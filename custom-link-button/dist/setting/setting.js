System.register(["jimu-core","jimu-ui/advanced/setting-components","jimu-ui","jimu-ui/basic/color-picker","jimu-ui/advanced/resource-selector"],(function(e,t){var a={},n={},r={},l={},o={};return{setters:[function(e){a.React=e.React},function(e){n.LinkSelector=e.LinkSelector,n.SettingRow=e.SettingRow},function(e){r.NumericInput=e.NumericInput,r.Option=e.Option,r.Select=e.Select,r.TextInput=e.TextInput},function(e){l.ColorPicker=e.ColorPicker},function(e){o.ImageSelector=e.ImageSelector}],execute:function(){e((()=>{var e={8891:e=>{"use strict";e.exports=a},726:e=>{"use strict";e.exports=r},663:e=>{"use strict";e.exports=o},7756:e=>{"use strict";e.exports=n},1362:e=>{"use strict";e.exports=l}},t={};function c(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,c),r.exports}c.d=(e,t)=>{for(var a in t)c.o(t,a)&&!c.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.p="";var i={};return c.p=window.jimuConfig.baseUrl,(()=>{"use strict";c.r(i),c.d(i,{__set_webpack_public_path__:()=>o,default:()=>l});var e=c(8891),t=c(7756),a=c(726),n=c(1362),r=c(663);function l(l){var o,c,i,m,s,g,R,d,u;const{config:v={},id:E,onSettingChange:y}=l,h=(e,t)=>{"function"==typeof(null==v?void 0:v.set)?y({id:E,config:v.set(e,t)}):y({id:E,config:Object.assign(Object.assign({},v),{[e]:t})})},p={flexDirection:"column",alignItems:"stretch",marginBottom:8},C={fontWeight:500,fontSize:13,marginBottom:2},S={fontWeight:600,fontSize:15,margin:"12px 0 6px 0",letterSpacing:.2},b={maxWidth:80,maxHeight:48,borderRadius:4,marginTop:4};return e.React.createElement("div",{className:"widget-setting",style:{padding:12,minWidth:240,maxWidth:320}},e.React.createElement("div",{style:S},"Контент"),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Текст кнопки (O'zbekcha)"),e.React.createElement(a.TextInput,{value:(null===(o=v.buttonText)||void 0===o?void 0:o.uz)||"",onChange:e=>h("buttonText",Object.assign(Object.assign({},v.buttonText),{uz:e.target.value})),size:"sm",placeholder:"Введите текст на узбекском языке"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Текст кнопки (Ўзбекча)"),e.React.createElement(a.TextInput,{value:(null===(c=v.buttonText)||void 0===c?void 0:c.uzcryl)||"",onChange:e=>h("buttonText",Object.assign(Object.assign({},v.buttonText),{uzcryl:e.target.value})),size:"sm",placeholder:"Введите текст на узбекском (кириллица)"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Текст кнопки (Русский)"),e.React.createElement(a.TextInput,{value:(null===(i=v.buttonText)||void 0===i?void 0:i.ru)||"",onChange:e=>h("buttonText",Object.assign(Object.assign({},v.buttonText),{ru:e.target.value})),size:"sm",placeholder:"Введите текст на русском языке"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Ссылка"),e.React.createElement(t.LinkSelector,{linkParam:v.linkConfig,onSettingConfirm:e=>h("linkConfig",e),buttonLabel:"Выбрать ссылку"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Фото (светлая тема)"),e.React.createElement(r.ImageSelector,{widgetId:E,onChange:e=>h("image",e),buttonLabel:(null===(m=v.image)||void 0===m?void 0:m.fileName)||"Загрузить/выбрать фото"}),(null===(s=v.image)||void 0===s?void 0:s.url)&&e.React.createElement("img",{src:v.image.url,alt:"",style:b})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Фото (тёмная тема)"),e.React.createElement(r.ImageSelector,{widgetId:E,onChange:e=>h("imageDark",e),buttonLabel:(null===(g=v.imageDark)||void 0===g?void 0:g.fileName)||"Загрузить/выбрать фото (тёмная тема)"}),(null===(R=v.imageDark)||void 0===R?void 0:R.url)&&e.React.createElement("img",{src:v.imageDark.url,alt:"",style:b})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Режим фото"),e.React.createElement(a.Select,{value:v.imageMode||"fit",onChange:e=>h("imageMode",e.target.value),size:"sm"},e.React.createElement(a.Option,{value:"fill"},"Fill"),e.React.createElement(a.Option,{value:"fit"},"Fit"),e.React.createElement(a.Option,{value:"stretch"},"Stretch"))),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Размер фото"),e.React.createElement("div",{style:{display:"flex",gap:8,alignItems:"center"}},e.React.createElement("div",{style:{flex:1}},e.React.createElement("div",{style:{fontSize:11,color:"#666",marginBottom:2}},"Ширина (px)"),e.React.createElement(a.NumericInput,{value:(null===(d=v.imageSize)||void 0===d?void 0:d.width)||100,onChange:e=>h("imageSize",Object.assign(Object.assign({},v.imageSize),{width:e})),min:10,max:500,size:"sm"})),e.React.createElement("div",{style:{flex:1}},e.React.createElement("div",{style:{fontSize:11,color:"#666",marginBottom:2}},"Высота (px)"),e.React.createElement(a.NumericInput,{value:(null===(u=v.imageSize)||void 0===u?void 0:u.height)||60,onChange:e=>h("imageSize",Object.assign(Object.assign({},v.imageSize),{height:e})),min:10,max:500,size:"sm"}))),e.React.createElement("div",{style:{marginTop:8}},e.React.createElement("label",{style:{fontSize:12,color:"#666",display:"flex",alignItems:"center",gap:4}},e.React.createElement("input",{type:"checkbox",checked:v.maintainAspectRatio||!1,onChange:e=>h("maintainAspectRatio",e.target.checked),style:{margin:0}}),"Сохранять пропорции"))),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Позиция фото"),e.React.createElement(a.Select,{value:v.imagePosition||"center",onChange:e=>h("imagePosition",e.target.value),size:"sm"},e.React.createElement(a.Option,{value:"center"},"По центру (поверх текста)"),e.React.createElement(a.Option,{value:"left"},"Слева от текста"),e.React.createElement(a.Option,{value:"right"},"Справа от текста"),e.React.createElement(a.Option,{value:"top"},"Сверху (поверх текста)"),e.React.createElement(a.Option,{value:"bottom"},"Снизу (поверх текста)")),e.React.createElement("div",{style:{fontSize:11,color:"#666",marginTop:2}},'"Слева" и "Справа" размещают иконку рядом с текстом, остальные - поверх текста')),e.React.createElement("div",{style:S},"Стили"),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет фона (Light)"),e.React.createElement(n.ColorPicker,{color:v.bgColor,onChange:e=>h("bgColor",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет текста (Light)"),e.React.createElement(n.ColorPicker,{color:v.textColor,onChange:e=>h("textColor",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет бордера (Light)"),e.React.createElement(n.ColorPicker,{color:v.borderColor,onChange:e=>h("borderColor",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет фона (hover, Light)"),e.React.createElement(n.ColorPicker,{color:v.hoverBgColor,onChange:e=>h("hoverBgColor",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет текста (hover, Light)"),e.React.createElement(n.ColorPicker,{color:v.hoverTextColor,onChange:e=>h("hoverTextColor",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет бордера (hover, Light)"),e.React.createElement(n.ColorPicker,{color:v.hoverBorderColor,onChange:e=>h("hoverBorderColor",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет фона (Dark)"),e.React.createElement(n.ColorPicker,{color:v.bgColorDark,onChange:e=>h("bgColorDark",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет текста (Dark)"),e.React.createElement(n.ColorPicker,{color:v.textColorDark,onChange:e=>h("textColorDark",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет бордера (Dark)"),e.React.createElement(n.ColorPicker,{color:v.borderColorDark,onChange:e=>h("borderColorDark",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет фона (hover, Dark)"),e.React.createElement(n.ColorPicker,{color:v.hoverBgColorDark,onChange:e=>h("hoverBgColorDark",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет текста (hover, Dark)"),e.React.createElement(n.ColorPicker,{color:v.hoverTextColorDark,onChange:e=>h("hoverTextColorDark",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Цвет бордера (hover, Dark)"),e.React.createElement(n.ColorPicker,{color:v.hoverBorderColorDark,onChange:e=>h("hoverBorderColorDark",e)})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Радиус скругления"),e.React.createElement(a.NumericInput,{value:v.borderRadius||8,onChange:e=>h("borderRadius",e),min:0,max:32,size:"sm"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Толщина бордера"),e.React.createElement(a.TextInput,{value:v.borderWidth||"1px",onChange:e=>h("borderWidth",e.target.value),size:"sm"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Стиль бордера"),e.React.createElement(a.Select,{value:v.borderStyle||"solid",onChange:e=>h("borderStyle",e.target.value),size:"sm"},e.React.createElement(a.Option,{value:"solid"},"solid"),e.React.createElement(a.Option,{value:"dashed"},"dashed"),e.React.createElement(a.Option,{value:"dotted"},"dotted"),e.React.createElement(a.Option,{value:"none"},"none"))),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Padding"),e.React.createElement(a.TextInput,{value:v.padding||"10px 20px",onChange:e=>h("padding",e.target.value),size:"sm"})),e.React.createElement(t.SettingRow,{style:p},e.React.createElement("div",{style:C},"Размер шрифта"),e.React.createElement(a.NumericInput,{value:v.fontSize||16,onChange:e=>h("fontSize",e),min:8,max:48,size:"sm"})))}function o(e){c.p=e}})(),i})())}}}));