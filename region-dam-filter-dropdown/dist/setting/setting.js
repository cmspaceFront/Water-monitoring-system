System.register(["jimu-core","jimu-ui/advanced/data-source-selector","jimu-ui/advanced/setting-components","jimu-ui","jimu-ui/basic/color-picker"],(function(e,o){var t={},r={},i={},n={},s={};return{setters:[function(e){t.DataSourceManager=e.DataSourceManager,t.DataSourceTypes=e.DataSourceTypes,t.Immutable=e.Immutable,t.React=e.React,t.jsx=e.jsx},function(e){r.DataSourceSelector=e.DataSourceSelector},function(e){i.MapWidgetSelector=e.MapWidgetSelector,i.SettingRow=e.SettingRow,i.SettingSection=e.SettingSection},function(e){n.NumericInput=e.NumericInput,n.Option=e.Option,n.Select=e.Select,n.Switch=e.Switch,n.TextInput=e.TextInput},function(e){s.ColorPicker=e.ColorPicker}],execute:function(){e((()=>{var e={8891:e=>{"use strict";e.exports=t},726:e=>{"use strict";e.exports=n},338:e=>{"use strict";e.exports=r},7756:e=>{"use strict";e.exports=i},1362:e=>{"use strict";e.exports=s}},o={};function d(t){var r=o[t];if(void 0!==r)return r.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,d),i.exports}d.d=(e,o)=>{for(var t in o)d.o(o,t)&&!d.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},d.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),d.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},d.p="";var l={};return d.p=window.jimuConfig.baseUrl,(()=>{"use strict";d.r(l),d.d(l,{__set_webpack_public_path__:()=>s,default:()=>n});var e=d(8891),o=d(338),t=d(7756),r=d(726),i=d(1362);class n extends e.React.PureComponent{constructor(){super(...arguments),this.supportedTypes=(0,e.Immutable)([e.DataSourceTypes.FeatureLayer]),this.state={fields:[]},this.loadFields=()=>{var o,t,r;const i=null===(t=null===(o=this.props.useDataSources)||void 0===o?void 0:o[0])||void 0===t?void 0:t.dataSourceId;if(i){const o=e.DataSourceManager.getInstance().getDataSource(i),t=null===(r=null==o?void 0:o.getSchema())||void 0===r?void 0:r.fields;if(t&&"object"==typeof t){const e=Object.values(t).map((e=>e.jimuName||e.name));this.setState({fields:e})}else this.setState({fields:[]})}else this.setState({fields:[]})},this.updateConfig=(e,o,t=!1)=>{t?this.props.onSettingChange({id:this.props.id,config:Object.assign(Object.assign({},this.props.config),{darkTheme:Object.assign(Object.assign({},this.props.config.darkTheme),{[e]:o})})}):this.props.onSettingChange({id:this.props.id,config:Object.assign(Object.assign({},this.props.config),{[e]:o})})}}componentDidMount(){this.loadFields()}componentDidUpdate(e){var o,t,r,i;const n=null===(t=null===(o=e.useDataSources)||void 0===o?void 0:o[0])||void 0===t?void 0:t.dataSourceId,s=null===(i=null===(r=this.props.useDataSources)||void 0===r?void 0:r[0])||void 0===i?void 0:i.dataSourceId;s&&n!==s&&this.loadFields()}renderInput(o,i,n=!1){return(0,e.jsx)(t.SettingRow,{label:o,flow:"wrap"},n?(0,e.jsx)(r.NumericInput,{value:Number(this.props.config[i])||0,onChange:e=>this.updateConfig(i,e)}):(0,e.jsx)(r.TextInput,{value:this.props.config[i]||"",onChange:e=>this.updateConfig(i,e.target.value)}))}renderColor(o,r){return(0,e.jsx)(t.SettingRow,{label:o},(0,e.jsx)(i.ColorPicker,{color:this.props.config[r],onChange:e=>this.updateConfig(r,e)}))}renderSwitch(o,i){var n;return(0,e.jsx)(t.SettingRow,{label:o},(0,e.jsx)(r.Switch,{checked:null!==(n=this.props.config[i])&&void 0!==n&&n,onChange:e=>this.updateConfig(i,e.target.checked)}))}renderDarkThemeColor(o,r){const n=this.props.config.darkTheme||{};return(0,e.jsx)(t.SettingRow,{label:o},(0,e.jsx)(i.ColorPicker,{color:n[r],onChange:e=>this.updateConfig(r,e,!0)}))}render(){const i=this.props.config,{fields:n}=this.state;return(0,e.jsx)("div",{className:"region-selector-settings p-3"},(0,e.jsx)(t.SettingSection,{title:"Data Source"},(0,e.jsx)(t.SettingRow,null,(0,e.jsx)(o.DataSourceSelector,{mustUseDataSource:!0,types:this.supportedTypes,useDataSources:this.props.useDataSources,onChange:e=>this.props.onSettingChange({id:this.props.id,useDataSources:e}),widgetId:this.props.id}))),n.length>0&&(0,e.jsx)("div",null,(0,e.jsx)(t.SettingSection,{title:"Body"},(0,e.jsx)(t.SettingRow,{label:"Parent",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.regionField||"",onChange:e=>this.updateConfig("regionField",e.target.value),placeholder:"Select attribute"},n.map((o=>(0,e.jsx)(r.Option,{key:o,value:o},o))))),(0,e.jsx)(t.SettingRow,{label:"Child",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.damField||"",onChange:e=>this.updateConfig("damField",e.target.value),placeholder:"Select attribute"},n.map((o=>(0,e.jsx)(r.Option,{key:o,value:o},o))))))),(0,e.jsx)(t.SettingSection,{title:"Map Widget"},(0,e.jsx)(t.SettingRow,null,(0,e.jsx)(t.MapWidgetSelector,{useMapWidgetIds:this.props.useMapWidgetIds,onSelect:e=>this.props.onSettingChange({id:this.props.id,useMapWidgetIds:e})}))),(0,e.jsx)(t.SettingSection,{title:"Session Storage",flow:"wrap"},(0,e.jsx)(t.SettingRow,{label:"Session key",flow:"wrap"},(0,e.jsx)(r.TextInput,{value:i.localStorageKey||"",onChange:e=>this.updateConfig("localStorageKey",e.target.value),placeholder:"e.g. selected_region"})),(0,e.jsx)(t.SettingRow,{label:"Field to store in session",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.localField||"",onChange:e=>this.updateConfig("localField",e.target.value),placeholder:"Select attribute"},n.map((o=>(0,e.jsx)(r.Option,{key:o,value:o},o)))))),(0,e.jsx)(t.SettingSection,{title:"Display"},this.renderSwitch("Show name","showName"),this.renderSwitch("Show count near name","showCountNearName"),this.renderSwitch("Show dropdown icon","showDropdownIcon"),this.renderSwitch("Show count at end","showEndCount")),(0,e.jsx)(t.SettingSection,{title:"Size"},this.renderSwitch("Enable size","showSize"),i.showSize&&(0,e.jsx)(e.React.Fragment,null,this.renderInput("Width","width",!0),this.renderInput("Height","height",!0),this.renderInput("ButtonWidth","buttonWidth",!0),this.renderInput("ButtonHeight","buttonHeight",!0),this.renderInput("Position","position"))),(0,e.jsx)(t.SettingSection,{title:"Spacing"},this.renderSwitch("Enable spacing","showSpacing"),i.showSpacing&&(0,e.jsx)(e.React.Fragment,null,this.renderInput("Padding","padding",!0),this.renderInput("Margin","margin",!0),this.renderInput("Gap between items","gap",!0))),(0,e.jsx)(t.SettingSection,{title:"Border"},this.renderSwitch("Enable border","showBorder"),i.showBorder&&(0,e.jsx)(e.React.Fragment,null,this.renderColor("Border color","borderColor"),this.renderInput("Border width","borderWidth",!0),this.renderInput("Border style","borderStyle"),this.renderInput("Border radius","borderRadius",!0),this.renderColor("Active Border color","activeBorderColor"),this.renderColor("Hover Border color","hoverBorderColor"),this.renderColor("Active Border color","defaultBorderColor"))),(0,e.jsx)(t.SettingSection,{title:"Background"},this.renderColor("Background color","bgColor")),(0,e.jsx)(t.SettingSection,{title:"Button"},this.renderSwitch("Enable hover","showHover"),i.showHover&&(0,e.jsx)(e.React.Fragment,null,this.renderColor("Hover background","hoverBgColor"),this.renderColor("Hover text color","hoverTextColor"),this.renderColor("Active background","activeBgColor"),this.renderColor("Active text color","activeTextColor"),this.renderColor("Default background","defaultBgColor"),this.renderColor("Default text color","defaultTextColor"))),(0,e.jsx)(t.SettingSection,{title:"Text Style"},this.renderSwitch("Enable text style","showTextStyle"),i.showTextStyle&&(0,e.jsx)("div",null,this.renderColor("Text color","textColor"),this.renderInput("Font size","fontSize",!0),this.renderInput("Line height","lineHeight",!0),this.renderInput("Letter spacing","letterSpacing",!0),this.renderInput("Font weight","fontWeight",!0))),(0,e.jsx)(t.SettingSection,{title:"Dropdown Item Style"},this.renderSwitch("Enable dropdown style","showDropdownItemStyle"),i.showDropdownItemStyle&&(0,e.jsx)(e.React.Fragment,null,this.renderColor("Background","dropdownItemBgColor"),this.renderColor("Text color","dropdownItemTextColor"),this.renderColor("Hover background","dropdownItemHoverBgColor"),this.renderColor("Hover text color","dropdownItemHoverTextColor"),this.renderColor("Hover border color","dropdownItemHoverBorderColor"),this.renderColor("Border color","dropdownItemBorderColor"),this.renderInput("Border width","dropdownItemBorderWidth",!0),this.renderInput("Border style","dropdownItemBorderStyle"),this.renderInput("Border radius","dropdownItemBorderRadius",!0),this.renderColor("Active Bg color","dropdownItemActiveBgColor"),this.renderColor("Active text color","dropdownItemActiveTextColor"),this.renderColor("Active border color","dropdownItemActiveBorderColor"))),(0,e.jsx)(t.SettingSection,{title:"Dark Theme"},this.renderDarkThemeColor("Background color","bgColor"),this.renderDarkThemeColor("Text color","textColor"),this.renderDarkThemeColor("Border color","borderColor"),this.renderDarkThemeColor("Active Border color","activeBorderColor"),this.renderDarkThemeColor("Hover Border color","hoverBorderColor"),this.renderDarkThemeColor("Dropdown Item Background","dropdownItemBgColor"),this.renderDarkThemeColor("Dropdown Item Text color","dropdownItemTextColor"),this.renderDarkThemeColor("Dropdown Item Hover background","dropdownItemHoverBgColor"),this.renderDarkThemeColor("Dropdown Item Hover text color","dropdownItemHoverTextColor"),this.renderDarkThemeColor("Dropdown Item Hover border color","dropdownItemHoverBorderColor"),this.renderDarkThemeColor("Dropdown Item Border color","dropdownItemBorderColor"),this.renderDarkThemeColor("Dropdown Item Active Bg color","dropdownItemActiveBgColor"),this.renderDarkThemeColor("Dropdown Item Active text color","dropdownItemActiveTextColor"),this.renderDarkThemeColor("Dropdown Item Active border color","dropdownItemActiveBorderColor"),this.renderDarkThemeColor("Hover background","hoverBgColor"),this.renderDarkThemeColor("Hover text color","hoverTextColor"),this.renderDarkThemeColor("Active background","activeBgColor"),this.renderDarkThemeColor("Active text color","activeTextColor"),this.renderDarkThemeColor("Default background","defaultBgColor"),this.renderDarkThemeColor("Default text color","defaultTextColor")))}}function s(e){d.p=e}})(),l})())}}}));