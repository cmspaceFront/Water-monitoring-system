System.register(["jimu-core","jimu-ui/advanced/data-source-selector","jimu-ui/advanced/setting-components","jimu-ui","jimu-ui/basic/color-picker"],(function(e,t){var o={},r={},i={},n={},s={};return{setters:[function(e){o.DataSourceManager=e.DataSourceManager,o.DataSourceTypes=e.DataSourceTypes,o.Immutable=e.Immutable,o.React=e.React,o.jsx=e.jsx},function(e){r.DataSourceSelector=e.DataSourceSelector},function(e){i.MapWidgetSelector=e.MapWidgetSelector,i.SettingRow=e.SettingRow,i.SettingSection=e.SettingSection},function(e){n.NumericInput=e.NumericInput,n.Option=e.Option,n.Select=e.Select,n.Switch=e.Switch,n.Tab=e.Tab,n.Tabs=e.Tabs,n.TextInput=e.TextInput},function(e){s.ColorPicker=e.ColorPicker}],execute:function(){e((()=>{var e={79244:e=>{"use strict";e.exports=o},14321:e=>{"use strict";e.exports=n},13089:e=>{"use strict";e.exports=r},79298:e=>{"use strict";e.exports=i},54337:e=>{"use strict";e.exports=s}},t={};function l(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,l),i.exports}l.d=(e,t)=>{for(var o in t)l.o(t,o)&&!l.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.p="";var d={};return l.p=window.jimuConfig.baseUrl,(()=>{"use strict";l.r(d),l.d(d,{__set_webpack_public_path__:()=>s,default:()=>n});var e=l(79244),t=l(13089),o=l(79298),r=l(14321),i=l(54337);class n extends e.React.PureComponent{constructor(){super(...arguments),this.supportedTypes=(0,e.Immutable)([e.DataSourceTypes.FeatureLayer]),this.state={fields:[],tab:"light"},this.setTab=e=>{this.setState({tab:e})},this.loadFields=()=>{var t,o,r;const i=null===(o=null===(t=this.props.useDataSources)||void 0===t?void 0:t[0])||void 0===o?void 0:o.dataSourceId;if(i){const t=e.DataSourceManager.getInstance().getDataSource(i),o=null===(r=null==t?void 0:t.getSchema())||void 0===r?void 0:r.fields;if(o&&"object"==typeof o){const e=Object.values(o).map((e=>e.jimuName||e.name));this.setState({fields:e})}else this.setState({fields:[]})}else this.setState({fields:[]})},this.updateConfig=(e,t)=>{this.props.onSettingChange({id:this.props.id,config:Object.assign(Object.assign({},this.props.config),{[e]:t})})}}componentDidMount(){this.loadFields()}componentDidUpdate(e){var t,o,r,i;const n=null===(o=null===(t=e.useDataSources)||void 0===t?void 0:t[0])||void 0===o?void 0:o.dataSourceId,s=null===(i=null===(r=this.props.useDataSources)||void 0===r?void 0:r[0])||void 0===i?void 0:i.dataSourceId;s&&n!==s&&this.loadFields()}renderInput(t,i,n=!1){return(0,e.jsx)(o.SettingRow,{label:t,flow:"wrap"},n?(0,e.jsx)(r.NumericInput,{value:Number(this.props.config[i])||0,onChange:e=>this.updateConfig(i,e)}):(0,e.jsx)(r.TextInput,{value:this.props.config[i]||"",onChange:e=>this.updateConfig(i,e.target.value)}))}renderColor(t,r){const{tab:n}=this.state,s=function(e,t,o){var r;const i=e[t];return i&&"object"==typeof i&&(i.light||i.dark)?null!==(r=i[o])&&void 0!==r?r:"":"string"==typeof i?i:""}(this.props.config,r,n);return(0,e.jsx)(o.SettingRow,{label:t,flow:"wrap"},(0,e.jsx)(i.ColorPicker,{color:s,onChange:e=>function(e,t,o,r,i,n){const s=e[t];let l;l=s&&"object"==typeof s&&(s.light||s.dark)?Object.assign(Object.assign({},s),{[o]:r}):"string"==typeof s&&s?{[o]:r,["light"===o?"dark":"light"]:s}:{[o]:r},i({id:n,config:Object.assign(Object.assign({},e),{[t]:l})})}(this.props.config,r,n,e,this.props.onSettingChange,this.props.id)}))}renderSwitch(t,i){var n;return(0,e.jsx)(o.SettingRow,{label:t},(0,e.jsx)(r.Switch,{checked:null!==(n=this.props.config[i])&&void 0!==n&&n,onChange:e=>this.updateConfig(i,e.target.checked)}))}render(){const i=this.props.config,{fields:n,tab:s}=this.state;return(0,e.jsx)("div",{className:"region-selector-settings p-3"},(0,e.jsx)(r.Tabs,{value:s,onChange:this.setTab,style:{marginBottom:16}},(0,e.jsx)(r.Tab,{id:"light",title:"Light Mode"},null),(0,e.jsx)(r.Tab,{id:"dark",title:"Dark Mode"},null)),(0,e.jsx)(o.SettingSection,{title:"Parent Background"},this.renderColor("Background color","parentBgColor")),(0,e.jsx)(o.SettingSection,{title:"Data Source"},(0,e.jsx)(o.SettingRow,null,(0,e.jsx)(t.DataSourceSelector,{mustUseDataSource:!0,types:this.supportedTypes,useDataSources:this.props.useDataSources,onChange:e=>this.props.onSettingChange({id:this.props.id,useDataSources:e}),widgetId:this.props.id}))),n.length>0&&(0,e.jsx)("div",null,(0,e.jsx)(o.SettingSection,{title:"Body"},(0,e.jsx)(o.SettingRow,{label:"Parent",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.regionField||"",onChange:e=>this.updateConfig("regionField",e.target.value),placeholder:"Select attribute"},n.map((t=>(0,e.jsx)(r.Option,{key:t,value:t},t))))),(0,e.jsx)(o.SettingRow,{label:"Child",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.damField||"",onChange:e=>this.updateConfig("damField",e.target.value),placeholder:"Select attribute"},n.map((t=>(0,e.jsx)(r.Option,{key:t,value:t},t))))))),(0,e.jsx)(o.SettingSection,{title:"Map Widget"},(0,e.jsx)(o.SettingRow,null,(0,e.jsx)(o.MapWidgetSelector,{useMapWidgetIds:this.props.useMapWidgetIds,onSelect:e=>this.props.onSettingChange({id:this.props.id,useMapWidgetIds:e})}))),(0,e.jsx)(o.SettingSection,{title:"Session Storage"},(0,e.jsx)(o.SettingRow,{label:"Session key",flow:"wrap"},(0,e.jsx)(r.TextInput,{value:i.sessionStorageKey||"",onChange:e=>this.updateConfig("sessionStorageKey",e.target.value),placeholder:"e.g. selected_region"})),(0,e.jsx)(o.SettingRow,{label:"Field to store in session",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.sessionField||"",onChange:e=>this.updateConfig("sessionField",e.target.value),placeholder:"Select attribute"},n.map((t=>(0,e.jsx)(r.Option,{key:t,value:t},t)))))),(0,e.jsx)(o.SettingSection,{title:"Size"},this.renderSwitch("Enable size","showSize"),i.showSize&&(0,e.jsx)("div",null,this.renderInput("Width","width",!0),this.renderInput("Height","height",!0),this.renderInput("ButtonWidth","buttonWidth",!0),this.renderInput("ButtonHeight","buttonHeight",!0),this.renderInput("Position","position"))),(0,e.jsx)(o.SettingSection,{title:"Spacing"},this.renderSwitch("Enable spacing","showSpacing"),i.showSpacing&&(0,e.jsx)("div",null,this.renderInput("Padding","padding",!0),this.renderInput("Margin","margin",!0),this.renderInput("Gap between items","gap",!0))),(0,e.jsx)(o.SettingSection,{title:"Border"},this.renderSwitch("Enable border","showBorder"),i.showBorder&&(0,e.jsx)("div",null,this.renderColor("Border color","borderColor"),this.renderInput("Border width","borderWidth",!0),this.renderInput("Border style","borderStyle"),this.renderInput("Border radius","borderRadius",!0),this.renderColor("Active Border color","activeBorderColor"),this.renderColor("Hover Border color","hoverBorderColor"),this.renderColor("Default Border color","defaultBorderColor"))),(0,e.jsx)(o.SettingSection,{title:"Background"},this.renderColor("Background color","bgColor")),(0,e.jsx)(o.SettingSection,{title:"Button"},this.renderSwitch("Enable hover","showHover"),i.showHover&&(0,e.jsx)("div",null,this.renderColor("Hover background","hoverBgColor"),this.renderColor("Hover text color","hoverTextColor"),this.renderColor("Active background","activeBgColor"),this.renderColor("Active text color","activeTextColor"),this.renderColor("Default background","defaultBgColor"),this.renderColor("Default text color","defaultTextColor"))),(0,e.jsx)(o.SettingSection,{title:"Text Style"},this.renderSwitch("Enable text style","showTextStyle"),i.showTextStyle&&(0,e.jsx)("div",null,this.renderColor("Text color","textColor"),this.renderColor("place holder color","placeholderColor"),this.renderColor("icon color","iconColor"),this.renderColor("Active icon color","activeIconColor"),this.renderInput("Font size","fontSize",!0),this.renderInput("Line height","lineHeight",!0),this.renderInput("Letter spacing","letterSpacing",!0),this.renderInput("Font weight","fontWeight",!0))),(0,e.jsx)(o.SettingSection,{title:"Dropdown Item Style"},this.renderSwitch("Enable dropdown style","showDropdownItemStyle"),i.showDropdownItemStyle&&(0,e.jsx)("div",null,this.renderColor("Background","dropdownItemBgColor"),this.renderColor("Text color","dropdownItemTextColor"),this.renderColor("Hover background","dropdownItemHoverBgColor"),this.renderColor("Hover text color","dropdownItemHoverTextColor"),this.renderColor("Hover border color","dropdownItemHoverBorderColor"),this.renderColor("Border color","dropdownItemBorderColor"),this.renderInput("Border width","dropdownItemBorderWidth",!0),this.renderInput("Border style","dropdownItemBorderStyle"),this.renderInput("Border radius","dropdownItemBorderRadius",!0),this.renderColor("Active Bg color","dropdownItemActiveBgColor"),this.renderColor("Active text color","dropdownItemActiveTextColor"),this.renderColor("Active border color","dropdownItemActiveBorderColor"),this.renderColor("Icon color","dropdownIconColor"),this.renderColor("Active icon color","dropdownActiveIconColor"))),(0,e.jsx)(o.SettingSection,{title:"Year Field"},(0,e.jsx)(o.SettingRow,{label:"Field for year",flow:"wrap"},(0,e.jsx)(r.Select,{value:i.yearField||"",onChange:e=>this.updateConfig("yearField",e.target.value),placeholder:"Select year field"},n.map((t=>(0,e.jsx)(r.Option,{key:t,value:t},t)))))))}}function s(e){l.p=e}})(),d})())}}}));