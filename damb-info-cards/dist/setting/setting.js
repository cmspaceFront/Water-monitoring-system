System.register(["jimu-core","jimu-ui/advanced/setting-components","jimu-ui","jimu-ui/basic/color-picker","jimu-ui/advanced/data-source-selector","jimu-core/react"],(function(e,t){var a={},l={},o={},r={},n={},i={};return{setters:[function(e){a.DataSourceManager=e.DataSourceManager,a.DataSourceTypes=e.DataSourceTypes,a.Immutable=e.Immutable,a.React=e.React,a.jsx=e.jsx},function(e){l.SettingRow=e.SettingRow},function(e){o.Button=e.Button,o.NumericInput=e.NumericInput,o.Option=e.Option,o.Select=e.Select,o.Switch=e.Switch,o.TextInput=e.TextInput},function(e){r.ColorPicker=e.ColorPicker},function(e){n.DataSourceSelector=e.DataSourceSelector},function(e){i.useEffect=e.useEffect,i.useState=e.useState}],execute:function(){e((()=>{var e={8891:e=>{"use strict";e.exports=a},1315:e=>{"use strict";e.exports=i},726:e=>{"use strict";e.exports=o},338:e=>{"use strict";e.exports=n},7756:e=>{"use strict";e.exports=l},1362:e=>{"use strict";e.exports=r}},t={};function s(a){var l=t[a];if(void 0!==l)return l.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,s),o.exports}s.d=(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.p="";var c={};return s.p=window.jimuConfig.baseUrl,(()=>{"use strict";s.r(c),s.d(c,{__set_webpack_public_path__:()=>i,default:()=>n});var e=s(8891),t=s(7756),a=s(726),l=s(1362),o=s(338),r=s(1315);function n(n){var i;const{config:s,id:c,useDataSources:u,onSettingChange:d}=n,[g,x]=(0,r.useState)(!1),[p,j]=(0,r.useState)(!1),[f,b]=(0,r.useState)(!1),[C,v]=(0,r.useState)(!0),[h,w]=(0,r.useState)([]);(0,r.useEffect)((()=>{if((null==u?void 0:u.length)>0){const t=e.DataSourceManager.getInstance().getDataSource(u[0].dataSourceId);if(t){const e=t.getSchema(),a=Object.values(e.fields||{});w(a)}}}),[u]),(0,r.useEffect)((()=>{s.bgColor||S("bgColor",{color:"#f5f5f5"}),s.gridGap||S("gridGap","12px"),s.gridWidth||S("gridWidth","100%"),s.gridHeight||S("gridHeight","auto"),s.cardBgColor||S("cardBgColor",{color:"#ffffff"}),s.cardBorderRadius||S("cardBorderRadius","10px"),s.cardPadding||S("cardPadding","16px"),s.cardBorderWidth||S("cardBorderWidth","1px"),s.cardBorderColor||S("cardBorderColor",{color:"#cccccc"}),s.cardDisplay||S("cardDisplay","column"),s.cardWidth||S("cardWidth","100%"),s.cardHeight||S("cardHeight","100%"),s.textColor||S("textColor",{color:"#000000"}),s.labelColor||S("labelColor",{color:"#4A4A4A"}),s.labelFontSize||S("labelFontSize","14px"),s.valueFontSize||S("valueFontSize","20px"),s.labelFontWeight||S("labelFontWeight","500"),s.valueFontWeight||S("valueFontWeight","700"),void 0===s.decimalPlaces&&S("decimalPlaces",2)}),[s]);const S=(e,t)=>{d({id:c,config:s.set(e,t)}),(e.includes("Color")||e.includes("color"))&&window.dispatchEvent(new CustomEvent("customThemeChanged"))};(0,r.useEffect)((()=>{s.statsConfig||d({id:c,config:s.set("statsConfig",[{labelKey:"fpu",field:"fpu",labelText:{},unitText:{}},{labelKey:"designVolume",field:"fact_volum",labelText:{},unitText:{}},{labelKey:"designArea",field:"fact_squar",labelText:{},unitText:{}},{labelKey:"npu",field:"npu",labelText:{},unitText:{}},{labelKey:"bathymetricVolume",field:"project_vo",labelText:{},unitText:{}},{labelKey:"bathymetricArea",field:"project_sq",labelText:{},unitText:{}},{labelKey:"dso",field:"umo",labelText:{},unitText:{}},{labelKey:"volumeDiff",field:"terrain_he",labelText:{},unitText:{}},{labelKey:"areaDiff",field:"max_height",labelText:{},unitText:{}}])})}),[]);const m=(e,t,a)=>{const l=[...s.statsConfig||[]];l[e]=Object.assign(Object.assign({},l[e]),{[t]:a}),d({id:c,config:s.set("statsConfig",l)})},y=(0,e.Immutable)([e.DataSourceTypes.FeatureLayer]),T={borderTop:"1px solid var(--light-300)",padding:"16px 12px",marginTop:12},k={display:"flex",justifyContent:"space-between",flexDirection:"column",alignItems:"center",fontWeight:"bold",paddingInline:"12px",marginBottom:"8px"},R={paddingLeft:"12px",paddingRight:"12px"};return(0,e.jsx)("div",{className:"widget-setting"},(0,e.jsx)("div",{style:Object.assign(Object.assign({},T),{borderTop:"none",marginTop:0})},(0,e.jsx)("div",{style:Object.assign(Object.assign({},k),{marginBottom:12})},(0,e.jsx)("span",null,"Источник данных")),(0,e.jsx)(o.DataSourceSelector,{mustUseDataSource:!0,types:y,useDataSources:u,onChange:e=>{d({id:c,useDataSources:e})},widgetId:c})),(0,e.jsx)("div",{style:T},(0,e.jsx)("div",{style:k},(0,e.jsx)("span",null,"Поля карточек"),(0,e.jsx)("div",{style:{display:"flex",gap:"8px",alignItems:"center",flexDirection:"column"}},(0,e.jsx)("div",{style:{display:"flex",justifyContent:"space-between",gap:"8px",alignItems:"center"}},(0,e.jsx)("span",{style:{fontSize:"12px",color:"#666"}},"Единицы измерений"),(0,e.jsx)(a.Switch,{checked:C,onChange:e=>v(e.target.checked)})),(0,e.jsx)(a.Button,{type:"primary",onClick:()=>{const e=[...s.statsConfig||[],{labelKey:"",field:"",labelText:{},unitText:{}}];d({id:c,config:s.set("statsConfig",e)})}},"Добавить"))),(s.statsConfig||[]).map(((l,o)=>{var r,n,i,u,g,x;return(0,e.jsx)("div",{key:o,style:{marginBottom:8,borderBottom:"1px solid #ccc",paddingBottom:8}},(0,e.jsx)(t.SettingRow,{label:"Label (Uz)"},(0,e.jsx)(a.TextInput,{value:(null===(r=l.labelText)||void 0===r?void 0:r.uz)||"",onChange:e=>m(o,"labelText",Object.assign(Object.assign({},l.labelText),{uz:e.target.value}))})),(0,e.jsx)(t.SettingRow,{label:"Label (Кирилл)"},(0,e.jsx)(a.TextInput,{value:(null===(n=l.labelText)||void 0===n?void 0:n.uzcryl)||"",onChange:e=>m(o,"labelText",Object.assign(Object.assign({},l.labelText),{uzcryl:e.target.value}))})),(0,e.jsx)(t.SettingRow,{label:"Label (Рус)"},(0,e.jsx)(a.TextInput,{value:(null===(i=l.labelText)||void 0===i?void 0:i.ru)||"",onChange:e=>m(o,"labelText",Object.assign(Object.assign({},l.labelText),{ru:e.target.value}))})),C&&(0,e.jsx)(e.React.Fragment,null,(0,e.jsx)(t.SettingRow,{label:"Единица измерения (Uz)"},(0,e.jsx)(a.TextInput,{value:(null===(u=l.unitText)||void 0===u?void 0:u.uz)||"",onChange:e=>m(o,"unitText",Object.assign(Object.assign({},l.unitText),{uz:e.target.value})),placeholder:"например: м³, км², %"})),(0,e.jsx)(t.SettingRow,{label:"Единица измерения (Кирилл)"},(0,e.jsx)(a.TextInput,{value:(null===(g=l.unitText)||void 0===g?void 0:g.uzcryl)||"",onChange:e=>m(o,"unitText",Object.assign(Object.assign({},l.unitText),{uzcryl:e.target.value})),placeholder:"например: м³, км², %"})),(0,e.jsx)(t.SettingRow,{label:"Единица измерения (Рус)"},(0,e.jsx)(a.TextInput,{value:(null===(x=l.unitText)||void 0===x?void 0:x.ru)||"",onChange:e=>m(o,"unitText",Object.assign(Object.assign({},l.unitText),{ru:e.target.value})),placeholder:"например: м³, км², %"}))),(0,e.jsx)(t.SettingRow,{label:`Field #${o+1}`,flow:"wrap"},(0,e.jsx)(a.Select,{value:l.field,onChange:e=>m(o,"field",e.target.value)},h.map(((t,l)=>(0,e.jsx)(a.Option,{key:l,value:t.jimuName},t.alias||t.name))))),(0,e.jsx)(a.Button,{type:"danger",size:"sm",onClick:()=>(e=>{const t=[...s.statsConfig||[]];t.splice(e,1),d({id:c,config:s.set("statsConfig",t)})})(o)},"Удалить"))}))),(0,e.jsx)("div",{style:T},(0,e.jsx)("div",{style:k},(0,e.jsx)("span",null,"Grid Styles"),(0,e.jsx)(a.Switch,{checked:g,onChange:e=>x(e.target.checked)})),g&&(0,e.jsx)("div",{style:R},(0,e.jsx)(t.SettingRow,{label:"Grid Background Color",flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.bgColor||"#f5f5f5",onChange:e=>S("bgColor",e)})),(0,e.jsx)(t.SettingRow,{label:"Grid Gap (px)",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:parseInt(s.gridGap)||12,onChange:e=>S("gridGap",`${e}px`)})),(0,e.jsx)(t.SettingRow,{label:"Grid Width",flow:"wrap"},(0,e.jsx)(a.TextInput,{value:s.gridWidth||"100%",onChange:e=>S("gridWidth",e.target.value),placeholder:"e.g., 100% or 500px"})),(0,e.jsx)(t.SettingRow,{label:"Grid Height",flow:"wrap"},(0,e.jsx)(a.TextInput,{value:s.gridHeight||"auto",onChange:e=>S("gridHeight",e.target.value),placeholder:"e.g., auto or 500px"})),(0,e.jsx)(t.SettingRow,{label:"Grid Template Columns",flow:"wrap"},(0,e.jsx)(a.TextInput,{value:s.gridTemplateColumns||"repeat(3, 1fr)",onChange:e=>S("gridTemplateColumns",e.target.value),placeholder:"e.g., repeat(3, 1fr) or 1fr 2fr"})))),(0,e.jsx)("div",{style:T},(0,e.jsx)("div",{style:k},(0,e.jsx)("span",null,"Card Styles"),(0,e.jsx)(a.Switch,{checked:p,onChange:e=>j(e.target.checked)})),p&&(0,e.jsx)("div",{style:R},(0,e.jsx)(t.SettingRow,{label:"Card Background Color",flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.cardBgColor||"#ffffff",onChange:e=>S("cardBgColor",e)})),(0,e.jsx)(t.SettingRow,{label:"Card Border Radius (px)",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:parseInt(s.cardBorderRadius)||10,onChange:e=>S("cardBorderRadius",`${e}px`)})),(0,e.jsx)(t.SettingRow,{label:"Card Padding (px)",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:parseInt(s.cardPadding)||16,onChange:e=>S("cardPadding",`${e}px`)})),(0,e.jsx)(t.SettingRow,{label:"Card Border Width (px)",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:parseInt(s.cardBorderWidth)||1,onChange:e=>S("cardBorderWidth",`${e}px`)})),(0,e.jsx)(t.SettingRow,{label:"Card Border Color",flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.cardBorderColor||"#cccccc",onChange:e=>S("cardBorderColor",e)})),(0,e.jsx)(t.SettingRow,{label:"Card Content Orientation",flow:"wrap"},(0,e.jsx)(a.Select,{value:s.cardDisplay||"column",onChange:e=>S("cardDisplay",e.target.value)},(0,e.jsx)(a.Option,{value:"column"},"Vertical"),(0,e.jsx)(a.Option,{value:"row"},"Horizontal"))),(0,e.jsx)(t.SettingRow,{label:"Card Width",flow:"wrap"},(0,e.jsx)(a.TextInput,{value:s.cardWidth||"100%",onChange:e=>S("cardWidth",e.target.value),placeholder:"e.g., 100% or 200px"})),(0,e.jsx)(t.SettingRow,{label:"Card Height",flow:"wrap"},(0,e.jsx)(a.TextInput,{value:s.cardHeight||"100%",onChange:e=>S("cardHeight",e.target.value),placeholder:"e.g., 100% or 200px"})))),(0,e.jsx)("div",{style:T},(0,e.jsx)("div",{style:k},(0,e.jsx)("span",null,"Text Styles"),(0,e.jsx)(a.Switch,{checked:f,onChange:e=>b(e.target.checked)})),f&&(0,e.jsx)("div",{style:R},(0,e.jsx)(t.SettingRow,{label:"Value Text Color",flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.textColor||"#000000",onChange:e=>S("textColor",e)})),(0,e.jsx)(t.SettingRow,{label:"Value Font Size (px)",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:parseInt(s.valueFontSize)||20,onChange:e=>S("valueFontSize",`${e}px`)})),(0,e.jsx)(t.SettingRow,{label:"Value Font Weight",flow:"wrap"},(0,e.jsx)(a.Select,{value:s.valueFontWeight||"700",onChange:e=>S("valueFontWeight",e.target.value)},(0,e.jsx)(a.Option,{value:"400"},"Normal (400)"),(0,e.jsx)(a.Option,{value:"500"},"Medium (500)"),(0,e.jsx)(a.Option,{value:"600"},"Semi-bold (600)"),(0,e.jsx)(a.Option,{value:"700"},"Bold (700)"))),(0,e.jsx)(t.SettingRow,{label:"Label Text Color",flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.labelColor||"#4A4A4A",onChange:e=>S("labelColor",e)})),(0,e.jsx)(t.SettingRow,{label:"Label Font Size (px)",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:parseInt(s.labelFontSize)||14,onChange:e=>S("labelFontSize",`${e}px`)})),(0,e.jsx)(t.SettingRow,{label:"Label Font Weight",flow:"wrap"},(0,e.jsx)(a.Select,{value:s.labelFontWeight||"500",onChange:e=>S("labelFontWeight",e.target.value)},(0,e.jsx)(a.Option,{value:"400"},"Normal (400)"),(0,e.jsx)(a.Option,{value:"500"},"Medium (500)"),(0,e.jsx)(a.Option,{value:"600"},"Semi-bold (600)"),(0,e.jsx)(a.Option,{value:"700"},"Bold (700)"))))),(0,e.jsx)("div",{style:T},(0,e.jsx)("div",{style:k},(0,e.jsx)("span",null,"Настройки форматирования")),(0,e.jsx)("div",{style:R},(0,e.jsx)(t.SettingRow,{label:"Количество знаков после запятой",flow:"wrap"},(0,e.jsx)(a.NumericInput,{value:null!==(i=s.decimalPlaces)&&void 0!==i?i:2,onChange:e=>S("decimalPlaces",e),min:0,max:10})))),(0,e.jsx)("div",{style:Object.assign(Object.assign({},T),{background:"#23272f",borderRadius:10,marginTop:32})},(0,e.jsx)("div",{style:Object.assign(Object.assign({},k),{color:"#fff",fontWeight:700,fontSize:17,marginBottom:14})},"Цвета для тёмной темы"),(0,e.jsx)("div",{style:R},(0,e.jsx)(t.SettingRow,{label:(0,e.jsx)("span",{style:{color:"#fff"}},"Grid Background (bgColorDark)"),flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.bgColorDark||"#23272f",onChange:e=>S("bgColorDark",e)})),(0,e.jsx)(t.SettingRow,{label:(0,e.jsx)("span",{style:{color:"#fff"}},"Card Background (cardBgColorDark)"),flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.cardBgColorDark||"#23272f",onChange:e=>S("cardBgColorDark",e)})),(0,e.jsx)(t.SettingRow,{label:(0,e.jsx)("span",{style:{color:"#fff"}},"Card Border Color (cardBorderColorDark)"),flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.cardBorderColorDark||"#444",onChange:e=>S("cardBorderColorDark",e)})),(0,e.jsx)(t.SettingRow,{label:(0,e.jsx)("span",{style:{color:"#fff"}},"Value Text Color (textColorDark)"),flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.textColorDark||"#fff",onChange:e=>S("textColorDark",e)})),(0,e.jsx)(t.SettingRow,{label:(0,e.jsx)("span",{style:{color:"#fff"}},"Label Text Color (labelColorDark)"),flow:"wrap"},(0,e.jsx)(l.ColorPicker,{color:s.labelColorDark||"#aaa",onChange:e=>S("labelColorDark",e)})))))}function i(e){s.p=e}})(),c})())}}}));